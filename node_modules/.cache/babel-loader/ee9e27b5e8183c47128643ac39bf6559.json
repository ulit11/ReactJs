{"ast":null,"code":"var _jsxFileName = \"/Users/agungprasetyo/my-react-project/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport BTable from \"react-bootstrap/Table\";\nimport { useTable } from \"react-table\";\nimport makeData from \"../src/_mocks_/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(BTable, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"Xnx1aw5Ajdh27qgCo7ZNFYuAvQ0=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction App() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: \"Jkt - Kdy\"\n  }, {\n    Header: \"Tgr - Dadp\"\n  }, {\n    Header: \"Bekasi - Glxy\"\n  }, {\n    Header: \"Category\"\n  }, {\n    Header: \"Product\"\n  }, {\n    Header: \"Total stock\"\n  }, {\n    Header: \"Percent\"\n  }, {\n    Header: \"Total order\"\n  }], []);\n  const data = [];\n  console.log(makeData.proformaItem[0].product_stock, \"makedata\");\n  makeData.proformaItem.forEach(item => {\n    const product_stock = JSON.parse(item.product_stock);\n    data.push({\n      jkt: product_stock[0]\n    });\n  });\n  console.log(JSON.parse(makeData.proformaItem[0].product_stock), \"parse json\");\n  console.log(JSON.parse(makeData.proformaItem[0].product_stock)[\"3\"], \"setelah array\");\n  console.log(makeData.location, \"makedata\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/agungprasetyo/my-react-project/src/App.js"],"names":["React","BTable","useTable","makeData","Table","columns","data","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","useMemo","Header","console","log","proformaItem","product_stock","forEach","item","JSON","parse","push","jkt","location"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport BTable from \"react-bootstrap/Table\";\n\nimport { useTable } from \"react-table\";\n\nimport makeData from \"../src/_mocks_/data.json\";\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable({\n    columns,\n    data,\n  });\n\n  // Render the UI for your table\n  return (\n    <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </BTable>\n  );\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Jkt - Kdy\",\n      },\n      {\n        Header: \"Tgr - Dadp\",\n      },\n      {\n        Header: \"Bekasi - Glxy\",\n      },\n      {\n        Header: \"Category\",\n      },\n      {\n        Header: \"Product\",\n      },\n      {\n        Header: \"Total stock\",\n      },\n      {\n        Header: \"Percent\",\n      },\n      {\n        Header: \"Total order\",\n      },\n    ],\n    []\n  );\n\n  const data = [];\n  console.log(makeData.proformaItem[0].product_stock, \"makedata\");\n  makeData.proformaItem.forEach((item) => {\n    const product_stock = JSON.parse(item.product_stock);\n    data.push({\n      jkt: product_stock[0],\n    });\n  });\n  console.log(JSON.parse(makeData.proformaItem[0].product_stock), \"parse json\");\n  console.log(\n    JSON.parse(makeData.proformaItem[0].product_stock)[\"3\"],\n    \"setelah array\"\n  );\n  console.log(makeData.location, \"makedata\");\n\n  return (\n    <div>\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}